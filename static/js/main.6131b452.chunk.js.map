{"version":3,"sources":["utils/textFormatters/capitalize.js","storage/actions/index.js","globalVars/index.js","views/pages/404.jsx","utils/CreateSuccessSnackBar.jsx","utils/CreatePortal.jsx","views/components/partials/navigation/NavMenu.jsx","storage/selectors/authStateSelector.js","storage/selectors/userNameSelector.js","views/components/partials/navigation/NavList.jsx","views/components/navigation/Navigation.jsx","reportWebVitals.js","utils/api/addPost.js","utils/formValidations/addPost.js","views/pages/AddPost.jsx","index.js","storage/reducers/postsReducer.js","storage/reducers/authReducer.js","storage/reducers/index.js","storage/store.js"],"names":["capitalize","string","toUpperCase","slice","toLowerCase","addPost","post","type","payload","id","title","body","userId","user","name","author","removePost","editPost","SNACKBAR_SUCCCESS_MESSAGE_TYPE","DELETE","POST","ADD","SNACKBAR_SUCCESS_TIMEOUT","NotFound","SuccessSnackBar","props","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval","sx","marginTop","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","width","actionType","variant","color","value","Number","Portal","children","className","el","React","document","createElement","container","classList","add","appendChild","remove","ReactDOM","createPortal","NavMenu","forwardRef","ref","anchorEl","setAnchorEl","Boolean","closeStatus","handleClose","Menu","onClick","disableScrollLock","to","MenuItem","ListItemIcon","Divider","store","dispatch","fontSize","selectAuthState","createSelector","state","auth","email","selectAuth","selectHasAccount","selectUserFirstName","firstName","selectUserLastName","lastName","selectFirstName","selectFullName","fullName","useStyles","makeStyles","theme","user___profile","display","textDecoration","marginLeft","spacing","navlinks","cursor","listStyle","link","borderBottom","mapStateToProps","createStructuredSelector","authStatus","connect","classes","userName","reference","useRef","handleClick","useCallback","e","current","contains","target","Avatar","logo","flexGrow","logoLink","Navbar","AppBar","position","CssBaseline","Toolbar","Typography","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","addPostViaAPI","a","fetch","method","JSON","stringify","headers","setPostIds","setPostId","setUserId","requests","map","url","result","Promise","all","responses","errors","filter","response","ok","length","Error","statusText","json","data","forEach","datum","index","Date","now","catch","error","console","addPostValidationSchema","Yup","shape","required","showSnackbar","setShowSnackbar","postId","status","btnColor","disabled","postStatus","setPostStatus","formOptions","resolver","yupResolver","useForm","register","handleSubmit","formState","submitData","setTimeout","clearTimeout","onSubmit","TextField","margin","label","multiline","minRows","maxRows","message","Button","tabIndex","style","size","SignUp","lazy","LogIn","Blogposts","Blogpost","ContactPage","AboutPage","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retryDelay","attemptIndex","Math","min","suspense","render","client","fallback","persistor","path","element","exact","getElementById","INITIAL_STATE","posts","originalPost","edittedPost","postsReducer","action","password","authReducer","persistConfig","key","storage","whitelist","allReducers","combineReducers","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistStore"],"mappings":"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","file":"static/js/main.6131b452.chunk.js","sourcesContent":["export default function capitalize(string) {\r\n  return `${string[0].toUpperCase()}${string.slice(1).toLowerCase()}`\r\n}\r\n\r\n","export const openMenu = id => ({\r\n  type: 'OPEN_MENU',\r\n  id\r\n})\r\n\r\nexport const CloseMenu = id => ({\r\n  type: 'CLOSE_MENU',\r\n  id\r\n})\r\n\r\nexport const AddPost = data => ({\r\n  type: 'POSTS/ADD_POST',\r\n  payload: { author: data.author, title: data.title, body: data.body }\r\n})\r\n\r\nexport const signUp = credentials => ({\r\n  type: 'USER/CRENEDTIALS',\r\n  payload: { auth: false, email: credentials.email, firstName: credentials.firstName, lastName: credentials.lastName, password: credentials.password }\r\n})\r\n\r\nexport const addPost = post => ({\r\n  type: 'POSTS/ADD_POST',\r\n  payload: {\r\n    id: post.id,\r\n    title: post.title,\r\n    body: post.body,\r\n    userId: post.userId,\r\n    user: {\r\n      name: post.author,\r\n    }\r\n  }\r\n\r\n})\r\n\r\nexport const removePost = id => ({\r\n  type: 'POSTS/REMOVE_POST',\r\n  payload: {\r\n    id\r\n  }\r\n})\r\n\r\nexport const editPost = post => ({\r\n  type: 'POSTS/EDIT_POST',\r\n  payload: {\r\n    id: post.id,\r\n    title: post.title,\r\n    body: post.body,\r\n  }\r\n})\r\n\r\nexport const logOut = { type: 'USER/LOG_OUT' }","export const SNACKBAR_SUCCCESS_MESSAGE_TYPE = { DELETE: 'deleted', POST: 'posted', ADD: 'added' };\r\nexport const SNACKBAR_SUCCESS_TIMEOUT = 5600;\r\n","import React from 'react';\r\n\r\n/* Local imports */\r\nimport '../styles/body.css';\r\n\r\nfunction NotFound() {\r\n  return <div>Page not found! :(</div>;\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Snackbar, LinearProgress, Alert } from '@mui/material';\r\nimport { Portal } from './CreatePortal';\r\n\r\nexport default function SuccessSnackBar(props) {\r\n  const [progress, setProgress] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) =>\r\n        prevProgress >= 100 ? 0 : prevProgress + 15\r\n      );\r\n    }, 800);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <Portal key={props.id}>\r\n      <Snackbar\r\n        sx={{ marginTop: '60px' }}\r\n        open={true}\r\n        autoHideDuration={6000}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <Alert severity=\"success\" sx={{ width: '100%' }}>\r\n          Post with id {props.id} has been {props.actionType} successfully!\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            color=\"success\"\r\n            value={Number(progress)}\r\n          />\r\n        </Alert>\r\n      </Snackbar>\r\n    </Portal>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport const Portal = ({ children, className = 'root-portal', el = 'div' }) => {\r\n  const [container] = React.useState(() => {\r\n    return document.createElement(el);\r\n  });\r\n\r\n  useEffect(() => {\r\n    container.classList.add(className);\r\n    document.body.appendChild(container);\r\n\r\n    return () => {\r\n      container.remove();\r\n    };\r\n  }, [className, container]);\r\n\r\n  return ReactDOM.createPortal(children, container);\r\n};\r\n","import React, { useState, forwardRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* Material UI Imports*/\r\nimport Add from '@material-ui/icons/Add';\r\nimport { Menu } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { ListItemIcon } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport Logout from '@mui/icons-material/Logout';\r\nimport Home from '@material-ui/icons/Home';\r\n\r\n/* Local Imports*/\r\nimport '../../../styles/navigation/Navigation.css';\r\nimport { store } from '../../../../storage/store';\r\n\r\nexport const NavMenu = forwardRef((props, ref) => {\r\n  const [anchorEl, setAnchorEl] = useState(ref);\r\n  let open = Boolean(anchorEl);\r\n  let closeStatus = props.handleClose;\r\n\r\n  useEffect(() => {\r\n    setAnchorEl(ref);\r\n\r\n    return () => {\r\n      setAnchorEl(null);\r\n    };\r\n  }, [ref]);\r\n\r\n  const logOut = () => store.dispatch({ type: 'USER/LOG_OUT' });\r\n  return (\r\n    <Menu\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      onClick={closeStatus}\r\n      disableScrollLock\r\n    >\r\n      <Link to=\"/\">\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <Home />\r\n          </ListItemIcon>\r\n          Home\r\n        </MenuItem>\r\n      </Link>\r\n\r\n      <Link to=\"/add-post\">\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          Add post\r\n        </MenuItem>\r\n      </Link>\r\n\r\n      <Divider />\r\n\r\n      <MenuItem onClick={logOut}>\r\n        <ListItemIcon>\r\n          <Logout fontSize=\"small\" />\r\n        </ListItemIcon>\r\n        Logout\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectAuth = state => state.user.auth;\r\nconst selectHasAccount = state => !!state.user.email;\r\n\r\nexport const selectAuthState = createSelector([selectAuth, selectHasAccount], (selectAuth, selectHasAccount) => selectAuth ? 'AUTHENTIFIED' : selectHasAccount ? 'LOG_IN' : 'SIGN_UP');\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectUserFirstName = state => state.user.firstName;\r\nconst selectUserLastName = state => state.user.lastName;\r\n\r\nexport const selectFirstName = createSelector([selectUserFirstName], firstName => ({ firstName }));\r\nexport const selectLastName = createSelector([selectUserLastName], lastName => ({ lastName }));\r\nexport const selectFullName = createSelector([selectUserFirstName, selectUserLastName], (firstName, lastName) => ({ fullName: `${firstName} ${lastName}` }))","import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n/* Utils imports */\r\nimport capitalize from '../../../../utils/textFormatters/capitalize.js';\r\n\r\n/* Material UI Imports*/\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Avatar } from '@mui/material';\r\n\r\n/* Local imports */\r\nimport { NavMenu } from './NavMenu.jsx';\r\nimport { selectAuthState } from '../../../../storage/selectors/authStateSelector.js';\r\nimport { selectFirstName } from '../../../../storage/selectors/userNameSelector.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  user___profile: {\r\n    display: 'flex',\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  navlinks: {\r\n    marginLeft: theme.spacing(10),\r\n    display: 'flex',\r\n    cursor: 'pointer',\r\n    listStyle: 'none',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n    marginLeft: theme.spacing(10),\r\n    '&:hover': {\r\n      color: 'yellow',\r\n      borderBottom: '1px solid white',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction NavList({ authStatus, user }) {\r\n  const classes = useStyles();\r\n  const { firstName: userName } = user;\r\n  const reference = useRef(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  useEffect(() => {}, [authStatus]);\r\n\r\n  const handleClick = useCallback((e) => {\r\n    if (reference.current.contains(e.target)) {\r\n      setAnchorEl(reference.current);\r\n    }\r\n  }, []);\r\n\r\n  const handleClose = useCallback((e) => setAnchorEl(null), []);\r\n\r\n  return (\r\n    <ul className={classes.navlinks}>\r\n      <li>\r\n        {authStatus === 'AUTHENTIFIED' ? (\r\n          <div\r\n            ref={reference}\r\n            onClick={(e) => handleClick(e)}\r\n            className={classes.user___profile}\r\n          >\r\n            <Avatar className=\"avatar\" />\r\n            <span>{userName ? capitalize(userName) : ''}</span>\r\n            {anchorEl ? (\r\n              <NavMenu handleClose={handleClose} ref={anchorEl} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        ) : authStatus === 'LOG_IN' ? (\r\n          <Link to=\"/login\" className={classes.link}>\r\n            Log in\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/signup\" className={classes.link}>\r\n            Sign up\r\n          </Link>\r\n        )}\r\n      </li>\r\n      <li>\r\n        <Link to=\"/about\" className={classes.link}>\r\n          About\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/contact\" className={classes.link}>\r\n          Contact Us\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  authStatus: selectAuthState,\r\n  user: selectFirstName,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavList);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* MUI Imports */\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  CssBaseline,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\n/* Local imports */\r\nimport '../../styles/navigation/Navigation.css';\r\nimport NavList from '../partials/navigation/NavList.jsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    flexGrow: '1',\r\n  },\r\n  logoLink: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <CssBaseline />\r\n      <Toolbar>\r\n        <Typography href=\"#\" variant=\"h4\" className={classes.logo}>\r\n          <Link to=\"/blog\" className={classes.logoLink}>\r\n            Terranet\r\n          </Link>\r\n        </Typography>\r\n        <nav>\r\n          <NavList />\r\n        </nav>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default Navbar;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const addPostViaAPI = async (post) => await fetch(`https://jsonplaceholder.typicode.com/posts/`, {\r\n  method: 'POST',\r\n  body: JSON.stringify(post),\r\n  headers: {\r\n    'Content-type': 'application/json; charset=UTF-8',\r\n  }\r\n}\r\n)\r\n\r\n\r\nexport const setPostIds = async (setPostId, setUserId) => {\r\n  const urls = [\r\n    'https://jsonplaceholder.typicode.com/posts',\r\n    'https://jsonplaceholder.typicode.com/users/',\r\n  ];\r\n  const requests = urls.map((url) => fetch(url, { method: 'GET' }));\r\n  let result = [];\r\n\r\n  await Promise.all(requests)\r\n    .then((responses) => {\r\n      const errors = responses.filter((response) => !response.ok);\r\n\r\n      if (errors.length > 0) {\r\n        throw errors.map((response) => Error(response.statusText));\r\n      }\r\n\r\n      const json = responses.map((response) => response.json());\r\n      return Promise.all(json);\r\n    })\r\n    .then((data) =>\r\n      data.forEach((datum, index) =>\r\n        index === 0 ? setPostId(Date.now()) : setUserId(datum.length + 1)\r\n      )\r\n    )\r\n    .catch((errors) => {\r\n      errors.forEach((error) => console.error(error));\r\n    });\r\n\r\n  return result;\r\n};","import * as Yup from 'yup';\r\n\r\nconst addPostValidationSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .required(\"Oh, I think you forgot your title...\"),\r\n  body: Yup.string()\r\n    .required(`Don't be shy, add some context to your post 😃`),\r\n})\r\n\r\nexport default addPostValidationSchema;","import React, { useEffect, useState } from 'react';\r\n\r\n/* Redux Imports */\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n/* React forms imports */\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n/* Material UI Imports */\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n/* ----------------- Local imports ------------------- */\r\n\r\n//IMPORT API REQUEST HANDLER\r\nimport { addPostViaAPI, setPostIds } from '../../utils/api/addPost.js';\r\n\r\n//IMPORT FORM VALIDATION\r\nimport addPostValidationSchema from '../../utils/formValidations/addPost.js';\r\n\r\n//IMPORTING REDUX STORE STUFF\r\nimport { addPost } from '../../storage/actions/index.js';\r\nimport { store } from '../../storage/store.js';\r\nimport { selectFullName } from '../../storage/selectors/userNameSelector.js';\r\n\r\n//IMPORTING SNACKBAR\r\nimport SuccessSnackBar from '../../utils/CreateSuccessSnackBar.jsx';\r\nimport { SNACKBAR_SUCCCESS_MESSAGE_TYPE } from '../../globalVars/index.js';\r\n\r\n//IMPORTING STYLES\r\nimport '../styles/components/AddPost.css';\r\n\r\nfunction AddPost({ author }) {\r\n  const [showSnackbar, setShowSnackbar] = useState(false); //for triggering the 'Post state' popup\r\n  const [postId, setPostId] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [postStatus, setPostStatus] = useState({\r\n    status: 'Add post',\r\n    btnColor: 'primary',\r\n    disabled: false,\r\n  });\r\n\r\n  const formOptions = { resolver: yupResolver(addPostValidationSchema) };\r\n  const { register, handleSubmit, formState } = useForm(formOptions);\r\n  const { errors } = formState;\r\n\r\n  useEffect(() => {\r\n    //generate unique IDs for the upcoming new post\r\n    setPostIds(setPostId, setUserId);\r\n\r\n    //initializing the close snackbar timer\r\n    let timer;\r\n    if (showSnackbar) timer = setTimeout(() => setShowSnackbar(false), 5600);\r\n\r\n    //on unmount - clear the timer\r\n    return () => clearTimeout(timer);\r\n  }, [showSnackbar, postStatus]);\r\n\r\n  async function submitData(post) {\r\n    await addPostViaAPI(post);\r\n  }\r\n\r\n  async function onSubmit(data) {\r\n    setShowSnackbar(true);\r\n\r\n    const post = {\r\n      userId: userId,\r\n      author: author.fullName,\r\n      id: postId,\r\n      title: data.title,\r\n      body: data.body,\r\n    };\r\n\r\n    store.dispatch(addPost(post));\r\n\r\n    try {\r\n      await submitData(post);\r\n      setPostStatus({\r\n        status: 'Success! Post added',\r\n        btnColor: 'default',\r\n        disabled: true,\r\n      });\r\n    } catch (e) {\r\n      setPostStatus({\r\n        status: `'Error': ${e}`,\r\n        btnColor: 'secondary',\r\n        disabled: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"form___header\">Create post</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form___main\">\r\n        <TextField\r\n          type=\"text\"\r\n          error={!!errors.title}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          className=\"input___field\"\r\n          label=\"Blogpost Title\"\r\n          multiline\r\n          minRows={1}\r\n          maxRows={2}\r\n          {...register('title')}\r\n        />\r\n        {errors.title && <p>Title cannot be empty!</p>}\r\n\r\n        <TextField\r\n          type=\"text\"\r\n          error={!!errors.body}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          className=\"input___field\"\r\n          label=\"What's that you would like to share with us today?\"\r\n          multiline\r\n          minRows={10}\r\n          maxRows={10}\r\n          {...register('body')}\r\n        />\r\n        {errors.body && <p>{errors.body?.message}</p>}\r\n\r\n        <Button\r\n          tabIndex=\"-1\"\r\n          style={{ marginTop: 0.5 + 'em' }}\r\n          className=\".submit___button___add___post\"\r\n          type=\"submit\"\r\n          color={postStatus.btnColor}\r\n          size=\"large\"\r\n          disabled={postStatus.disabled}\r\n          variant=\"contained\"\r\n        >\r\n          {postStatus.status}\r\n        </Button>\r\n        {showSnackbar ? (\r\n          <div>\r\n            <SuccessSnackBar\r\n              id={postId}\r\n              actionType={SNACKBAR_SUCCCESS_MESSAGE_TYPE.ADD}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  author: selectFullName,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddPost);\r\n","import React from 'react';\nimport { lazy, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './storage/store.js';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport Navigation from './views/components/navigation/Navigation.jsx';\nimport NotFound from './views/pages/404';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport AddPost from './views/pages/AddPost.jsx';\n\nconst SignUp = lazy(() => import('./views/pages/SignUp'));\nconst LogIn = lazy(() => import('./views/pages/LogIn'));\n\nconst Blogposts = lazy(() => import('./views/pages/HomePage.jsx'))\nconst Blogpost = lazy(() => import('./views/pages/Blogpost'));\n\n// const AddPost = import('./views/pages/AddPost.jsx')\n\nconst ContactPage = lazy(() => import('./views/pages/Contactus'));\nconst AboutPage = lazy(() => import('./views/pages/About'));\n\n\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n\n    queries: {\n      refetchOnWindowFocus: false,\n      retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000),\n      suspense: true,\n    },\n\n  },\n});\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <Suspense fallback={<span>Loading...</span>}>\n        <BrowserRouter>\n          <PersistGate persistor={persistor}>\n            <Navigation />\n            <Routes>\n              <Route path=\"*\" element={<NotFound />} />\n              <Route path=\"/signup\" element={<SignUp />} />\n              <Route path=\"/login\" element={<LogIn />} />\n              <Route exact path=\"/blog\" element={<Blogposts />} />\n              <Route exact path=\"/about\" element={<AboutPage />} />\n              <Route exact path=\"/contact\" element={<ContactPage />} />\n              <Route path=\"/posts/:slug\" element={<Blogpost />} />\n              <Route path=\"/add-post\" element={<AddPost />} />\n            </Routes>\n          </PersistGate>\n        </BrowserRouter>\n      </Suspense>\n    </QueryClientProvider>\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const INITIAL_STATE = {\r\n  posts: []\r\n}\r\n\r\nconst editPost = (originalPost, edittedPost) => {\r\n  originalPost.title = edittedPost.title;\r\n  originalPost.body = edittedPost.body;\r\n  return originalPost;\r\n}\r\n\r\nconst postsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"POSTS/ADD_POST\":\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload]\r\n      }\r\n    case \"POSTS/REMOVE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.payload.id)\r\n      }\r\n    case \"POSTS/EDIT_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => Number(post.id) === Number(action.payload.id) ? post = editPost(post, action.payload) : post)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postsReducer;","const INITIAL_STATE = { auth: false, email: null, firstName: null, lastName: null, password: null }\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'USER/SET_CREDENTIALS':\r\n      return {\r\n        ...state,\r\n        email: action.payload.email,\r\n        firstName: action.payload.firstName,\r\n        lastName: action.payload.lastName,\r\n        password: action.payload.password,\r\n      }\r\n    case 'USER/LOGIN':\r\n      return {\r\n        ...state,\r\n        auth: true\r\n      }\r\n    case 'USER/LOG_OUT':\r\n      return {\r\n        ...state,\r\n        auth: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['user', 'post'] // which reducer want to store\r\n};\r\n\r\nconst allReducers = combineReducers({\r\n  post: postsReducer,\r\n  user: authReducer\r\n})\r\n\r\n\r\nexport default persistReducer(persistConfig, allReducers);","import { createStore } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport allReducers from './reducers';\r\n\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };"],"sourceRoot":""}