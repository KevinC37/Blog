{"version":3,"sources":["storage/actions/index.js","utils/textFormatters/capitalize.js","storage/selectors/userNameSelector.js","views/components/partials/navigation/NavMenu.jsx","storage/selectors/authStateSelector.js","views/components/partials/navigation/NavList.jsx","views/components/navigation/Navigation.jsx","reportWebVitals.js","index.js","storage/reducers/postsReducer.js","storage/reducers/authReducer.js","storage/reducers/index.js","storage/store.js"],"names":["signUp","type","payload","auth","email","firstName","lastName","password","logIn","logOut","addPost","post","id","title","body","userId","user","name","author","removePost","editPost","capitalize","string","trim","charAt","toUpperCase","slice","toLowerCase","selectUserFirstName","state","selectUserLastName","selectFirstName","createSelector","selectFullName","fullName","NavMenu","forwardRef","ref","handleClose","useState","anchorEl","setAnchorEl","open","Boolean","useEffect","userLogOut","useCallback","store","dispatch","Menu","onClick","disableScrollLock","to","MenuItem","ListItemIcon","Divider","fontSize","selectAuthState","selectAuth","selectHasAccount","useStyles","makeStyles","theme","user___profile","display","textDecoration","color","marginLeft","spacing","navlinks","cursor","listStyle","link","borderBottom","mapStateToProps","createStructuredSelector","authStatus","connect","classes","userName","reference","useRef","handleClick","e","current","contains","target","className","Avatar","logo","flexGrow","logoLink","Navbar","AppBar","position","CssBaseline","Toolbar","Typography","href","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddPost","lazy","AboutPage","Blogpost","Blogposts","ContactPage","LogIn","NotFound","SignUp","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retryDelay","attemptIndex","Math","min","suspense","ReactDOM","render","client","fallback","persistor","path","element","exact","document","getElementById","INITIAL_STATE","posts","originalPost","edittedPost","postsReducer","action","filter","map","Number","authReducer","persistConfig","key","storage","whitelist","allReducers","combineReducers","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistStore"],"mappings":"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","file":"static/js/main.20580fbe.chunk.js","sourcesContent":["export const openMenu = id => ({\r\n  type: 'OPEN_MENU',\r\n  id\r\n});\r\n\r\nexport const CloseMenu = id => ({\r\n  type: 'CLOSE_MENU',\r\n  id\r\n});\r\n\r\nexport const AddPost = data => ({\r\n  type: 'POSTS/ADD_POST',\r\n  payload: { author: data.author, title: data.title, body: data.body }\r\n});\r\n\r\nexport const signUp = ({ email, firstName, lastName, password }) => ({\r\n  type: 'USER/SET_CREDENTIALS',\r\n  payload: { auth: false, email, firstName, lastName, password }\r\n});\r\n\r\nexport const logIn = { type: 'USER/LOGIN' };\r\n\r\nexport const logOut = { type: 'USER/LOG_OUT' };\r\n\r\nexport const addPost = post => ({\r\n  type: 'POSTS/ADD_POST',\r\n  payload: {\r\n    id: post.id,\r\n    title: post.title,\r\n    body: post.body,\r\n    userId: post.userId,\r\n    user: {\r\n      name: post.author,\r\n    }\r\n  }\r\n\r\n});\r\n\r\nexport const removePost = id => ({\r\n  type: 'POSTS/REMOVE_POST',\r\n  payload: {\r\n    id\r\n  }\r\n});\r\n\r\nexport const editPost = post => ({\r\n  type: 'POSTS/EDIT_POST',\r\n  payload: {\r\n    id: post.id,\r\n    title: post.title,\r\n    body: post.body,\r\n  }\r\n});\r\n\r\n\r\n\r\n","export default function capitalize(string) {\r\n  return string.trim().charAt(0).toUpperCase() + string.trim().slice(1).toLowerCase();\r\n}\r\n\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectUserFirstName = state => state.user.firstName;\r\nconst selectUserLastName = state => state.user.lastName;\r\n\r\nexport const selectFirstName = createSelector([selectUserFirstName], firstName => ({ firstName }));\r\nexport const selectLastName = createSelector([selectUserLastName], lastName => ({ lastName }));\r\nexport const selectFullName = createSelector([selectUserFirstName, selectUserLastName], (firstName, lastName) => ({ fullName: `${firstName} ${lastName}` }))","import React, { useState, forwardRef, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* Material UI Imports*/\r\nimport Add from '@material-ui/icons/Add';\r\nimport { Menu } from '@material-ui/core';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { ListItemIcon } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\nimport Logout from '@mui/icons-material/Logout';\r\nimport Home from '@material-ui/icons/Home';\r\n\r\n/* Redux imports */\r\nimport { store } from '../../../../storage/store.js';\r\nimport { logOut } from '../../../../storage/actions/index.js';\r\n\r\n/* Local Imports*/\r\nimport '../../../styles/navigation/Navigation.css';\r\n\r\nexport const NavMenu = forwardRef(({ handleClose }, ref) => {\r\n  const [anchorEl, setAnchorEl] = useState(ref);\r\n  let open = Boolean(anchorEl);\r\n\r\n  useEffect(() => {\r\n    setAnchorEl(ref);\r\n\r\n    return () => {\r\n      setAnchorEl(null);\r\n    };\r\n  }, [ref]);\r\n\r\n  const userLogOut = useCallback(() => store.dispatch(logOut), []);\r\n\r\n  return (\r\n    <Menu\r\n      open={open}\r\n      anchorEl={anchorEl}\r\n      onClick={handleClose}\r\n      disableScrollLock\r\n    >\r\n      <Link to=\"/blog\">\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <Home />\r\n          </ListItemIcon>\r\n          Home\r\n        </MenuItem>\r\n      </Link>\r\n\r\n      <Link to=\"/blog/add-post\">\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <Add />\r\n          </ListItemIcon>\r\n          Add post\r\n        </MenuItem>\r\n      </Link>\r\n\r\n      <Divider />\r\n\r\n      <MenuItem onClick={userLogOut}>\r\n        <ListItemIcon>\r\n          <Logout fontSize=\"small\" />\r\n        </ListItemIcon>\r\n        Logout\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectAuth = state => state.user.auth;\r\nconst selectHasAccount = state => !!state.user.email;\r\n\r\nexport const selectAuthState = createSelector([selectAuth, selectHasAccount], (selectAuth, selectHasAccount) => selectAuth ? 'AUTHENTIFIED' : selectHasAccount ? 'LOG_IN' : 'SIGN_UP');\r\n\r\n","import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\n/* Utils imports */\r\nimport capitalize from '../../../../utils/textFormatters/capitalize.js';\r\n\r\n/* Material UI Imports*/\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n/* Local imports */\r\nimport { NavMenu } from './NavMenu.jsx';\r\nimport { selectAuthState } from '../../../../storage/selectors/authStateSelector.js';\r\nimport { selectFirstName } from '../../../../storage/selectors/userNameSelector.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  user___profile: {\r\n    display: 'flex',\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  navlinks: {\r\n    marginLeft: theme.spacing(10),\r\n    display: 'flex',\r\n    cursor: 'pointer',\r\n    listStyle: 'none',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    fontSize: '1rem',\r\n    marginLeft: theme.spacing(10),\r\n    '&:hover': {\r\n      color: 'yellow',\r\n      borderBottom: '1px solid white',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction NavList({ authStatus, user }) {\r\n  const classes = useStyles();\r\n\r\n  const { firstName: userName } = user;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const reference = useRef(null);\r\n\r\n  useEffect(() => {}, [authStatus]);\r\n\r\n  const handleClick = useCallback((e) => {\r\n    if (reference.current.contains(e.target)) {\r\n      setAnchorEl(reference.current);\r\n    }\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => setAnchorEl(null), []);\r\n\r\n  return (\r\n    <ul className={classes.navlinks}>\r\n      <li>\r\n        {authStatus === 'AUTHENTIFIED' ? (\r\n          <div\r\n            ref={reference}\r\n            onClick={(e) => handleClick(e)}\r\n            className={classes.user___profile}\r\n          >\r\n            <Avatar className=\"avatar\" />\r\n            <span>{userName ? capitalize(userName) : null}</span>\r\n            {anchorEl ? (\r\n              <NavMenu handleClose={handleClose} ref={anchorEl} />\r\n            ) : null}\r\n          </div>\r\n        ) : authStatus === 'LOG_IN' ? (\r\n          <Link to=\"/blog/login\" className={classes.link}>\r\n            Log in\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/blog/signup\" className={classes.link}>\r\n            Sign up\r\n          </Link>\r\n        )}\r\n      </li>\r\n      <li>\r\n        <Link to=\"/blog/about\" className={classes.link}>\r\n          About\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/blog/contact\" className={classes.link}>\r\n          Contact Us\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  authStatus: selectAuthState,\r\n  user: selectFirstName,\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavList);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* MUI Imports */\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport makeStyles from '@material-ui/styles/makeStyles';\r\n\r\n/* Local imports */\r\nimport '../../styles/navigation/Navigation.css';\r\nimport NavList from '../partials/navigation/NavList.jsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  logo: {\r\n    flexGrow: '1',\r\n  },\r\n  logoLink: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <CssBaseline />\r\n      <Toolbar>\r\n        <Typography href=\"#\" variant=\"h4\" className={classes.logo}>\r\n          <Link to=\"/blog\" className={classes.logoLink}>\r\n            Terranet\r\n          </Link>\r\n        </Typography>\r\n        <nav>\r\n          <NavList />\r\n        </nav>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { lazy, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\n/* Redux imports */\nimport { store, persistor } from './storage/store.js';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n/* React query imports */\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\n/* Local imports */\nimport Navigation from './views/components/navigation/Navigation.jsx';\nimport './views/styles/body/Body.css';\n\n\nimport reportWebVitals from './reportWebVitals';\n\n/* Lazyloading pages */\nconst AddPost = lazy(() => import('./views/pages/AddPost.jsx'));\nconst AboutPage = lazy(() => import('./views/pages/About.jsx'));\nconst Blogpost = lazy(() => import('./views/pages/Blogpost.jsx'));\nconst Blogposts = lazy(() => import('./views/pages/HomePage.jsx'))\nconst ContactPage = lazy(() => import('./views/pages/ContactUs.jsx'));\nconst LogIn = lazy(() => import('./views/pages/LogIn.jsx'));\nconst NotFound = lazy(() => import('./views/pages/404.jsx'));\nconst SignUp = lazy(() => import('./views/pages/SignUp.jsx'));\n\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n\n    queries: {\n      refetchOnWindowFocus: false,\n      retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000),\n      suspense: true,\n    },\n\n  },\n});\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <Suspense fallback={<span>Loading...</span>}>\n        <BrowserRouter>\n          <PersistGate persistor={persistor}>\n            <Navigation />\n            <Routes>\n              <Route path=\"*\" element={<NotFound />} />\n              <Route path=\"/blog/signup\" element={<SignUp />} />\n              <Route path=\"/blog/login\" element={<LogIn />} />\n              <Route exact path=\"/blog/\" element={<Blogposts />} />\n              <Route exact path=\"/blog/about\" element={<AboutPage />} />\n              <Route exact path=\"/blog/contact\" element={<ContactPage />} />\n              <Route path=\"/blog/posts/:slug\" element={<Blogpost />} />\n              <Route path=\"/blog/add-post\" element={<AddPost />} />\n            </Routes>\n          </PersistGate>\n        </BrowserRouter>\n      </Suspense>\n    </QueryClientProvider>\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const INITIAL_STATE = {\r\n  posts: []\r\n}\r\n\r\nconst editPost = (originalPost, edittedPost) => {\r\n  originalPost.title = edittedPost.title;\r\n  originalPost.body = edittedPost.body;\r\n  return originalPost;\r\n}\r\n\r\nconst postsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"POSTS/ADD_POST\":\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload]\r\n      }\r\n    case \"POSTS/REMOVE_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.payload.id)\r\n      }\r\n    case \"POSTS/EDIT_POST\":\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => Number(post.id) === Number(action.payload.id) ? post = editPost(post, action.payload) : post)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postsReducer;","const INITIAL_STATE = { auth: false, email: null, firstName: null, lastName: null, password: null }\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'USER/SET_CREDENTIALS':\r\n      return {\r\n        ...state,\r\n        email: action.payload.email,\r\n        firstName: action.payload.firstName,\r\n        lastName: action.payload.lastName,\r\n        password: action.payload.password,\r\n      }\r\n    case 'USER/LOGIN':\r\n      return {\r\n        ...state,\r\n        auth: true\r\n      }\r\n    case 'USER/LOG_OUT':\r\n      return {\r\n        ...state,\r\n        auth: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from \"redux\";\r\n\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport postsReducer from \"./postsReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['user', 'post'] // which reducer want to store\r\n};\r\n\r\nconst allReducers = combineReducers({\r\n  post: postsReducer,\r\n  user: authReducer\r\n})\r\n\r\n\r\nexport default persistReducer(persistConfig, allReducers);","import { createStore } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport allReducers from './reducers';\r\n\r\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };"],"sourceRoot":""}